<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>refencel</title>
		<description>Stylish Jekyll Theme</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>你应该掌握的10个jQuery代码片段</title>
				<description>&lt;p&gt;jQuery被用在用在无数个网站的页面上，它是使用最为广泛的jsvascript库之一。jQuery的受欢迎程度的部分是它的简单性。它能够通过简单的语句完成大部分复杂的功能。有许多jQuery片段我们在每天不断重复的使用，这里总结了10条你必须知道的jQuery代码片段。&lt;/p&gt;
&lt;h2 id=&quot;返回顶部&quot;&gt;返回顶部&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;&amp;lt;a class=&quot;top&quot; href=&quot;#&quot;&amp;gt;返回顶部&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;a.top&quot;).click(function(){
    $(document.body).animate({scrollTop: 0},800);
    return false;
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如上所示，使用jQuery 的animate和scrollTop 可以十分方便的制作一个返回顶部的特效。&lt;br /&gt;
通过改变scrollTop 的值我们可以控制滚动条。在上面的例子中值设为0，是为了让页面滚动到最顶部。&lt;br /&gt;
上面的动画效果是在800ms内从页面底部滚动到页面的最顶部。&lt;/p&gt;

&lt;h2 id=&quot;检查图片是否加载完毕&quot;&gt;检查图片是否加载完毕&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;img&quot;).load(function(){
    console.log(&quot;图片加载成功&quot;)；
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时候你需要检查图片是否被完全加载以便于完成后继的脚本，上面的jQuery代码可以帮助你完成这个任务&lt;/p&gt;

&lt;h2 id=&quot;自动修复破损图像&quot;&gt;自动修复破损图像&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;img&quot;).error(function(){
    $(this).attr(&quot;src&quot;, &quot;images/broken.jpg&quot;);
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们偶尔会在某些页面上弄错一些图片的链接，这时想要一一修复它们并不是一件容易的事情。使用上面的代码，可以快速的帮助我们解决这个问题。&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;鼠标滑过时切换class&quot;&gt;鼠标滑过时切换class&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;a&quot;).hover(fucntion(){
    $(this).addClass(&quot;hover&quot;);
},function(){
    $(this).removeClass(&quot;hover&quot;);
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个jQuery片段在用户鼠标滑过目标时，给目标添加上指定样式，当然此处功能也可使用css来完成。&lt;/p&gt;

&lt;h2 id=&quot;使input字段不可用&quot;&gt;使input字段不可用&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;input[type='submit']&quot;).attr(&quot;disabled&quot;, true);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时候你可能会希望某个按钮或者某个input不可使用，直到用户触发某个条件，例如：点击了“勾选同意协议。。。”才能进行下一步操作。通过上面的代码可以使input不可点击，假如想恢复点击，可以使用下面的代码。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;input[type='submit']&quot;).removeAttr(&quot;disabled&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;阻止超链接点击跳转&quot;&gt;阻止超链接点击跳转&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$(&quot;a.no-link&quot;).click(function(e){
    e.preventDefault();
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时候我们不想让某个标签跳转链接，只是希望点击的时候触发脚本，这时，可以通过上面的jQuery代码片段来阻止浏览器的默认行为。&lt;/p&gt;

&lt;h2 id=&quot;切换fadeslide效果&quot;&gt;切换fade/slide效果&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;//fade
$(&quot;.btn&quot;).click(function(){
    $(&quot;.el&quot;).fadeToggle(&quot;fade&quot;);
})

//slide
$(&quot;.btn&quot;).click(function(){
    $(&quot;.el&quot;).slideToggle(&quot;slide&quot;);
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;滑动和淡入淡出是我们经常使用到的效果。&lt;/p&gt;

&lt;h2 id=&quot;简单的手风琴效果&quot;&gt;简单的手风琴效果&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;// close all panels
$(&quot;#accordion&quot;).find(&quot;.content&quot;).hide();

//accordion
$(&quot;#accordion&quot;).find(&quot;#accordion-header&quot;).click(function(){
    var next = $(this).next();
    next.slideToggle('fast');
    $(‘.content’).not(next).slideUp('fast’);
        return false;
    });   
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;要使用这个脚本你所要做的事情是编写一个必要的html结构代码。&lt;/p&gt;

&lt;h2 id=&quot;使两个div高度相同&quot;&gt;使两个DIV高度相同&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$('.div').css('min-height', $('.main-div').height());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时候你希望两个div具有相同的高度和不同的内容，这个jQuery片段可以解决这个问题。它通过设置“min-height”来使div具有相同的高度。&lt;/p&gt;

&lt;h2 id=&quot;无序列表隔行变色&quot;&gt;无序列表隔行变色&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-phtyon&quot;&gt;$('li:odd').css('background', '#E8E8E8’); 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过这句代码你可以很容易的创建一个隔行变色的无序列表，你也可以将它移植到表格、div或其它元素上去。&lt;/p&gt;
</description>
				<pubDate>Fri, 28 Jul 2017 00:00:00 +0800</pubDate>
				<link>/jquery/2017/07/28/%E4%BD%A0%E5%BA%94%E8%AF%A5%E6%8E%8C%E6%8F%A1%E7%9A%8410%E4%B8%AAjQuery%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html</link>
				<guid isPermaLink="true">/jquery/2017/07/28/%E4%BD%A0%E5%BA%94%E8%AF%A5%E6%8E%8C%E6%8F%A1%E7%9A%8410%E4%B8%AAjQuery%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html</guid>
			</item>
		
	</channel>
</rss>
